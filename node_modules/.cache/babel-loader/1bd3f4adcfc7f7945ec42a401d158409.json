{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Cart.module.css\";\nimport { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext); // toFixed(2) make sure that we always have two decimal places\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = userData => {\n    fetch(\"https://test-87086-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"POST\"\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price // .bind(null, item.id) ensures that the id of the to be added or removed item is passed here to RemoveHandler\n      // bind pre-configure the argument that function will receive when it's being executed\n      // so we ensure these two function do receive the id or the item respectively\n      ,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item) // bind explanation: https://www.javascripttutorial.net/javascript-bind/\n\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Cart, \"h+sIjGF0PwOLirwEDh4q+RICsX0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Cart.js"],"names":["classes","useContext","useState","CartContext","Modal","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","submitOrderHandler","userData","fetch","method","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","button","total"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,mBAApB;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMS,OAAO,GAAGV,UAAU,CAACE,WAAD,CAA1B,CAFuB,CAIvB;;AACA,QAAMS,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AACrCP,IAAAA,OAAO,CAACQ,UAAR,CAAmBD,EAAnB;AACA,GAFD;;AAGA,QAAME,kBAAkB,GAAIC,IAAD,IAAU;AACpCV,IAAAA,OAAO,CAACW,OAAR,CAAgBD,IAAhB;AACA,GAFD;;AAGA,QAAME,YAAY,GAAG,MAAM;AAC1Bb,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAFD;;AAGA,QAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACxCC,IAAAA,KAAK,CAAC,4DAAD,EAA+D;AACnEC,MAAAA,MAAM,EAAE;AAD2D,KAA/D,CAAL;AAGA,GAJD;;AAMA,QAAMC,SAAS,gBACd;AAAI,IAAA,SAAS,EAAE5B,OAAO,CAAC,YAAD,CAAtB;AAAA,cACEW,OAAO,CAACI,KAAR,CAAcc,GAAd,CAAmBR,IAAD,iBAClB,QAAC,QAAD;AAEC,MAAA,IAAI,EAAEA,IAAI,CAACS,IAFZ;AAGC,MAAA,MAAM,EAAET,IAAI,CAACU,MAHd;AAIC,MAAA,KAAK,EAAEV,IAAI,CAACW,KAJb,CAKC;AACA;AACA;AAPD;AAQC,MAAA,QAAQ,EAAEf,qBAAqB,CAACgB,IAAtB,CAA2B,IAA3B,EAAiCZ,IAAI,CAACH,EAAtC,CARX;AASC,MAAA,KAAK,EAAEE,kBAAkB,CAACa,IAAnB,CAAwB,IAAxB,EAA8BZ,IAA9B,CATR,CAUC;;AAVD,OACMA,IAAI,CAACH,EADX;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;;AAmBA,QAAMgB,YAAY,gBACjB;AAAK,IAAA,SAAS,EAAElC,OAAO,CAACmC,OAAxB;AAAA,4BACC;AAAQ,MAAA,SAAS,EAAEnC,OAAO,CAAC,aAAD,CAA1B;AAA2C,MAAA,OAAO,EAAEQ,KAAK,CAAC4B,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAIEtB,QAAQ,iBACR;AAAQ,MAAA,SAAS,EAAEd,OAAO,CAACqC,MAA3B;AAAmC,MAAA,OAAO,EAAEd,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;;AAYA,sBACC,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEf,KAAK,CAAC4B,OAAtB;AAAA,eACER,SADF,eAEC;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAACsC,KAAxB;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,kBAAO1B;AAAP;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EAMEH,UAAU,iBACV,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEe,kBAArB;AAAyC,MAAA,QAAQ,EAAEhB,KAAK,CAAC4B;AAAzD;AAAA;AAAA;AAAA;AAAA,YAPF,EASE,CAAC3B,UAAD,IAAeyB,YATjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAnED;;GAAM3B,I;;KAAAA,I;AAqEN,eAAeA,IAAf","sourcesContent":["import classes from \"./Cart.module.css\";\n\nimport { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = (props) => {\n\tconst [isCheckout, setIsCheckout] = useState(false);\n\tconst cartCtx = useContext(CartContext);\n\n\t// toFixed(2) make sure that we always have two decimal places\n\tconst totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\tconst hasItems = cartCtx.items.length > 0;\n\n\tconst cartItemRemoveHandler = (id) => {\n\t\tcartCtx.removeItem(id);\n\t};\n\tconst cartItemAddHandler = (item) => {\n\t\tcartCtx.addItem(item);\n\t};\n\tconst orderHandler = () => {\n\t\tsetIsCheckout(true);\n\t};\n\tconst submitOrderHandler = (userData) => {\n\t\tfetch(\"https://test-87086-default-rtdb.firebaseio.com/orders.json\", {\n\t\t\tmethod: \"POST\",\n\t\t});\n\t};\n\n\tconst cartItems = (\n\t\t<ul className={classes[\"cart-items\"]}>\n\t\t\t{cartCtx.items.map((item) => (\n\t\t\t\t<CartItem\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tname={item.name}\n\t\t\t\t\tamount={item.amount}\n\t\t\t\t\tprice={item.price}\n\t\t\t\t\t// .bind(null, item.id) ensures that the id of the to be added or removed item is passed here to RemoveHandler\n\t\t\t\t\t// bind pre-configure the argument that function will receive when it's being executed\n\t\t\t\t\t// so we ensure these two function do receive the id or the item respectively\n\t\t\t\t\tonRemove={cartItemRemoveHandler.bind(null, item.id)}\n\t\t\t\t\tonAdd={cartItemAddHandler.bind(null, item)}\n\t\t\t\t\t// bind explanation: https://www.javascripttutorial.net/javascript-bind/\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n\n\tconst modalActions = (\n\t\t<div className={classes.actions}>\n\t\t\t<button className={classes[\"button--alt\"]} onClick={props.onClose}>\n\t\t\t\tClose\n\t\t\t</button>\n\t\t\t{hasItems && (\n\t\t\t\t<button className={classes.button} onClick={orderHandler}>\n\t\t\t\t\tOrder\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n\treturn (\n\t\t<Modal onClose={props.onClose}>\n\t\t\t{cartItems}\n\t\t\t<div className={classes.total}>\n\t\t\t\t<span>Total Amount</span>\n\t\t\t\t<span>{totalAmount}</span>\n\t\t\t</div>\n\t\t\t{isCheckout && (\n\t\t\t\t<Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\n\t\t\t)}\n\t\t\t{!isCheckout && modalActions}\n\t\t</Modal>\n\t);\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}