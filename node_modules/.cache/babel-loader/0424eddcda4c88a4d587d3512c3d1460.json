{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    email: true\n  });\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n\n  const hideCartHandler = () => {\n    dispatch(uiActions.setCartIsShown(false));\n  };\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredEmail = emailInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredEmailIsValid = !isEmpty(enteredEmail);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      email: enteredEmailIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredEmailIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredEmail\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const emailControlClasses = `${classes.control} ${formInputsValidity.email ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: emailInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), !formInputsValidity.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: hideCartHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Checkout, \"1BbbmATGzqu+Hq8QWeUXVF3CEnQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Checkout.js"],"names":["useRef","useState","useDispatch","uiActions","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","dispatch","formInputsValidity","setFormInputsValidity","name","email","nameInputRef","emailInputRef","hideCartHandler","setCartIsShown","confirmHandler","event","preventDefault","enteredName","current","enteredEmail","enteredNameIsValid","enteredEmailIsValid","formIsValid","onConfirm","street","nameControlClasses","control","invalid","emailControlClasses","form","actions","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n\tconst dispatch = useDispatch();\n\tconst [formInputsValidity, setFormInputsValidity] = useState({\n\t\tname: true,\n\t\temail: true,\n\t});\n\n\tconst nameInputRef = useRef();\n\tconst emailInputRef = useRef();\n\n\tconst hideCartHandler = () => {\n\t\tdispatch(uiActions.setCartIsShown(false));\n\t};\n\tconst confirmHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredName = nameInputRef.current.value;\n\t\tconst enteredEmail = emailInputRef.current.value;\n\n\t\tconst enteredNameIsValid = !isEmpty(enteredName);\n\t\tconst enteredEmailIsValid = !isEmpty(enteredEmail);\n\n\t\tsetFormInputsValidity({\n\t\t\tname: enteredNameIsValid,\n\t\t\temail: enteredEmailIsValid,\n\t\t});\n\n\t\tconst formIsValid = enteredNameIsValid && enteredEmailIsValid;\n\n\t\tif (!formIsValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tprops.onConfirm({\n\t\t\tname: enteredName,\n\t\t\tstreet: enteredEmail,\n\t\t});\n\t};\n\n\tconst nameControlClasses = `${classes.control} ${\n\t\tformInputsValidity.name ? \"\" : classes.invalid\n\t}`;\n\tconst emailControlClasses = `${classes.control} ${\n\t\tformInputsValidity.email ? \"\" : classes.invalid\n\t}`;\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={confirmHandler}>\n\t\t\t<div className={nameControlClasses}>\n\t\t\t\t<label htmlFor=\"name\">Your Name</label>\n\t\t\t\t<input type=\"text\" id=\"name\" ref={nameInputRef} />\n\t\t\t\t{!formInputsValidity.name && <p>Please enter a valid name!</p>}\n\t\t\t</div>\n\t\t\t<div className={emailControlClasses}>\n\t\t\t\t<label htmlFor=\"street\">Email</label>\n\t\t\t\t<input type=\"text\" id=\"street\" ref={emailInputRef} />\n\t\t\t\t{!formInputsValidity.email && <p>Please enter a valid email!</p>}\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button type=\"button\" onClick={hideCartHandler}>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<button className={classes.submit}>Confirm</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}