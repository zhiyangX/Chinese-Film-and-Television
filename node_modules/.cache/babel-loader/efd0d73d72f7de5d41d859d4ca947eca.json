{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://test-87086-default-rtdb.firebaseio.com/meals.json\");\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n    };\n\n    fetchMeals();\n  }, []);\n  const mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AvailableMeals, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Meals/AvailableMeals.js"],"names":["classes","Card","MealItem","useEffect","AvailableMeals","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","description","price","mealsList","DUMMY_MEALS","map","meal","meals"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,6BAApB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC5BD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAME,UAAU,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,2DAD2B,CAA5B;AAGA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC/BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAChBC,UAAAA,EAAE,EAAEF,GADY;AAEhBG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFR;AAGhBC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHf;AAIhBC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJT,SAAjB;AAMA;AACD,KAdD;;AAgBAX,IAAAA,UAAU;AACV,GAlBQ,EAkBN,EAlBM,CAAT;AAmBA,QAAMY,SAAS,GAAGC,WAAW,CAACC,GAAZ,CAAiBC,IAAD,iBACjC,QAAC,QAAD;AAEC,IAAA,EAAE,EAAEA,IAAI,CAACP,EAFV;AAGC,IAAA,IAAI,EAAEO,IAAI,CAACN,IAHZ;AAIC,IAAA,WAAW,EAAEM,IAAI,CAACL,WAJnB;AAKC,IAAA,KAAK,EAAEK,IAAI,CAACJ;AALb,KACMI,IAAI,CAACP,EADX;AAAA;AAAA;AAAA;AAAA,UADiB,CAAlB;AASA,sBACC;AAAS,IAAA,SAAS,EAAEb,OAAO,CAACqB,KAA5B;AAAA,2BACC,QAAC,IAAD;AAAA,6BACC;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CApCD;;GAAMb,c;;KAAAA,c;AAsCN,eAAeA,cAAf","sourcesContent":["import classes from \"./AvailableMeals.module.css\";\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { useEffect } from \"react\";\n\nconst AvailableMeals = () => {\n\tuseEffect(() => {\n\t\tconst fetchMeals = async () => {\n\t\t\tconst response = await fetch(\n\t\t\t\t\"https://test-87086-default-rtdb.firebaseio.com/meals.json\"\n\t\t\t);\n\t\t\tconst responseData = await response.json();\n\t\t\tconst loadedMeals = [];\n\t\t\tfor (const key in responseData) {\n\t\t\t\tloadedMeals.push({\n\t\t\t\t\tid: key,\n\t\t\t\t\tname: responseData[key].name,\n\t\t\t\t\tdescription: responseData[key].description,\n\t\t\t\t\tprice: responseData[key].price,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfetchMeals();\n\t}, []);\n\tconst mealsList = DUMMY_MEALS.map((meal) => (\n\t\t<MealItem\n\t\t\tkey={meal.id}\n\t\t\tid={meal.id}\n\t\t\tname={meal.name}\n\t\t\tdescription={meal.description}\n\t\t\tprice={meal.price}\n\t\t/>\n\t));\n\treturn (\n\t\t<section className={classes.meals}>\n\t\t\t<Card>\n\t\t\t\t<ul>{mealsList}</ul>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}