{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          title: newItem.title\n        });\n        state.totalAmount = state.totalAmount + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalAmount = state.totalAmount - existingItem.price;\n      state.items = state.items.filter(item => item.id !== id);\n    },\n\n    clearCart(state) {\n      state = {\n        items: [],\n        totalAmount: 0\n      };\n    }\n\n  }\n});\nexport default cartSlice;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalAmount","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","title","removeItemFromCart","filter","clearCart","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC7BE,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,YAAY,EAAE;AACbC,IAAAA,KAAK,EAAE,EADM;AAEbC,IAAAA,WAAW,EAAE;AAFA,GAFe;AAM7BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;;AACA,UAAI,CAACH,YAAL,EAAmB;AAClBJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AAChBD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADI;AAEhBE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFC;AAGhBC,UAAAA,KAAK,EAAER,OAAO,CAACQ;AAHC,SAAjB;AAKAV,QAAAA,KAAK,CAACH,WAAN,GAAoBG,KAAK,CAACH,WAAN,GAAoBK,OAAO,CAACO,KAAhD;AACA;AACD,KAZQ;;AAaTE,IAAAA,kBAAkB,CAACX,KAAD,EAAQC,MAAR,EAAgB;AACjC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;AACAP,MAAAA,KAAK,CAACH,WAAN,GAAoBG,KAAK,CAACH,WAAN,GAAoBO,YAAY,CAACK,KAArD;AACAT,MAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYgB,MAAZ,CAAoBN,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACA,KAlBQ;;AAmBTM,IAAAA,SAAS,CAACb,KAAD,EAAQ;AAChBA,MAAAA,KAAK,GAAG;AACPJ,QAAAA,KAAK,EAAE,EADA;AAEPC,QAAAA,WAAW,EAAE;AAFN,OAAR;AAIA;;AAxBQ;AANmB,CAAD,CAA7B;AAkCA,eAAeJ,SAAf;AACA,OAAO,MAAMqB,WAAW,GAAGrB,SAAS,CAACsB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n\tname: \"cart\",\n\tinitialState: {\n\t\titems: [],\n\t\ttotalAmount: 0,\n\t},\n\treducers: {\n\t\taddItemToCart(state, action) {\n\t\t\tconst newItem = action.payload;\n\t\t\tconst existingItem = state.items.find((item) => item.id === newItem.id);\n\t\t\tif (!existingItem) {\n\t\t\t\tstate.items.push({\n\t\t\t\t\tid: newItem.id,\n\t\t\t\t\tprice: newItem.price,\n\t\t\t\t\ttitle: newItem.title,\n\t\t\t\t});\n\t\t\t\tstate.totalAmount = state.totalAmount + newItem.price;\n\t\t\t}\n\t\t},\n\t\tremoveItemFromCart(state, action) {\n\t\t\tconst id = action.payload;\n\t\t\tconst existingItem = state.items.find((item) => item.id === id);\n\t\t\tstate.totalAmount = state.totalAmount - existingItem.price;\n\t\t\tstate.items = state.items.filter((item) => item.id !== id);\n\t\t},\n\t\tclearCart(state) {\n\t\t\tstate = {\n\t\t\t\titems: [],\n\t\t\t\ttotalAmount: 0,\n\t\t\t};\n\t\t},\n\t},\n});\n\nexport default cartSlice;\nexport const cartActions = cartSlice.actions;\n"]},"metadata":{},"sourceType":"module"}