{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Cart.module.css\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport { useSelector } from \"react-redux\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.cart.items);\n  console.log(\"here\");\n  console.log(items);\n  const totalAmount = useSelector(state => state.cart.totalAmount);\n\n  const hideCartHandler = () => {\n    dispatch(uiActions.setCartIsShown(false));\n  };\n\n  const hasItems = items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch(\"https://chinesedrama-cae77-default-rtdb.asia-southeast1.firebasedatabase.app/orders.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    dispatch(cartActions.clearCart());\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      title: item.title,\n      price: item.price // .bind(null, item.id) ensures that the id of the to be added or removed item is passed here to RemoveHandler\n      // bind pre-configure the argument that function will receive when it's being executed\n      // so we ensure these two function do receive the id or the item respectively\n      ,\n      onRemove: cartItemRemoveHandler.bind(null, item.id) // bind explanation: https://www.javascripttutorial.net/javascript-bind/\n\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: hideCartHandler,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this), !isCheckout && modalActions]\n  }, void 0, true);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 35\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: hideCartHandler,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Cart, \"VJbwwPrpp4AY9em53/VaHOoDr34=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Cart.js"],"names":["classes","useState","useDispatch","uiActions","cartActions","useSelector","Modal","CartItem","Checkout","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","dispatch","items","state","cart","console","log","totalAmount","hideCartHandler","setCartIsShown","hasItems","length","cartItemRemoveHandler","id","removeItemFromCart","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","map","item","title","price","bind","modalActions","actions","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import classes from \"./Cart.module.css\";\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport { useSelector } from \"react-redux\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = () => {\n\tconst [isCheckout, setIsCheckout] = useState(false);\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\tconst [didSubmit, setDidSubmit] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst items = useSelector((state) => state.cart.items);\n\tconsole.log(\"here\");\n\tconsole.log(items);\n\tconst totalAmount = useSelector((state) => state.cart.totalAmount);\n\tconst hideCartHandler = () => {\n\t\tdispatch(uiActions.setCartIsShown(false));\n\t};\n\tconst hasItems = items.length > 0;\n\n\tconst cartItemRemoveHandler = (id) => {\n\t\tdispatch(cartActions.removeItemFromCart(id));\n\t};\n\tconst orderHandler = () => {\n\t\tsetIsCheckout(true);\n\t};\n\tconst submitOrderHandler = async (userData) => {\n\t\tsetIsSubmitting(true);\n\t\tawait fetch(\n\t\t\t\"https://chinesedrama-cae77-default-rtdb.asia-southeast1.firebasedatabase.app/orders.json\",\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: JSON.stringify({ user: userData, orderedItems: items }),\n\t\t\t}\n\t\t);\n\t\tsetIsSubmitting(false);\n\t\tsetDidSubmit(true);\n\t\tdispatch(cartActions.clearCart());\n\t};\n\n\tconst cartItems = (\n\t\t<ul className={classes[\"cart-items\"]}>\n\t\t\t{items.map((item) => (\n\t\t\t\t<CartItem\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\ttitle={item.title}\n\t\t\t\t\tprice={item.price}\n\t\t\t\t\t// .bind(null, item.id) ensures that the id of the to be added or removed item is passed here to RemoveHandler\n\t\t\t\t\t// bind pre-configure the argument that function will receive when it's being executed\n\t\t\t\t\t// so we ensure these two function do receive the id or the item respectively\n\t\t\t\t\tonRemove={cartItemRemoveHandler.bind(null, item.id)}\n\t\t\t\t\t// bind explanation: https://www.javascripttutorial.net/javascript-bind/\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n\n\tconst modalActions = (\n\t\t<div className={classes.actions}>\n\t\t\t<button className={classes[\"button--alt\"]} onClick={hideCartHandler}>\n\t\t\t\tClose\n\t\t\t</button>\n\t\t\t{hasItems && (\n\t\t\t\t<button className={classes.button} onClick={orderHandler}>\n\t\t\t\t\tOrder\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n\n\tconst cartModalContent = (\n\t\t<>\n\t\t\t{cartItems}\n\t\t\t<div className={classes.total}>\n\t\t\t\t<span>Total Amount</span>\n\t\t\t\t<span>{totalAmount}</span>\n\t\t\t</div>\n\t\t\t{isCheckout && <Checkout onConfirm={submitOrderHandler} />}\n\t\t\t{!isCheckout && modalActions}\n\t\t</>\n\t);\n\tconst isSubmittingModalContent = <p>Sending order data..</p>;\n\tconst didSubmitModalContent = (\n\t\t<>\n\t\t\t<p>Successfully sent the order!</p>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button className={classes.button} onClick={hideCartHandler}>\n\t\t\t\t\tClose\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</>\n\t);\n\treturn (\n\t\t<Modal>\n\t\t\t{!isSubmitting && !didSubmit && cartModalContent}\n\t\t\t{isSubmitting && isSubmittingModalContent}\n\t\t\t{!isSubmitting && didSubmit && didSubmitModalContent}\n\t\t</Modal>\n\t);\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}