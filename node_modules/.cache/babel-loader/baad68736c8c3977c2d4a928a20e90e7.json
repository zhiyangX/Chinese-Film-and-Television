{"ast":null,"code":"import _slicedToArray from\"/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from\"react\";import{useDispatch}from\"react-redux\";import{uiActions}from\"../../store/ui-slice\";import classes from\"./Checkout.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()===\"\";};var Checkout=function Checkout(props){var dispatch=useDispatch();var _useState=useState({name:true,email:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setFormInputsValidity=_useState2[1];var nameInputRef=useRef();var emailInputRef=useRef();var hideCartHandler=function hideCartHandler(){dispatch(uiActions.setCartIsShown(false));};var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredEmail=emailInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredEmailIsValid=!isEmpty(enteredEmail);setFormInputsValidity({name:enteredNameIsValid,email:enteredEmailIsValid});var formIsValid=enteredNameIsValid&&enteredEmailIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredEmail});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.name?\"\":classes.invalid);var emailControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.email?\"\":classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:emailControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:emailInputRef}),!formInputsValidity.email&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid email!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:hideCartHandler,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Checkout.js"],"names":["useRef","useState","useDispatch","uiActions","classes","isEmpty","value","trim","Checkout","props","dispatch","name","email","formInputsValidity","setFormInputsValidity","nameInputRef","emailInputRef","hideCartHandler","setCartIsShown","confirmHandler","event","preventDefault","enteredName","current","enteredEmail","enteredNameIsValid","enteredEmailIsValid","formIsValid","onConfirm","street","nameControlClasses","control","invalid","emailControlClasses","form","actions","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\n\nconst Checkout = (props) => {\n\tconst dispatch = useDispatch();\n\tconst [formInputsValidity, setFormInputsValidity] = useState({\n\t\tname: true,\n\t\temail: true,\n\t});\n\n\tconst nameInputRef = useRef();\n\tconst emailInputRef = useRef();\n\n\tconst hideCartHandler = () => {\n\t\tdispatch(uiActions.setCartIsShown(false));\n\t};\n\tconst confirmHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredName = nameInputRef.current.value;\n\t\tconst enteredEmail = emailInputRef.current.value;\n\n\t\tconst enteredNameIsValid = !isEmpty(enteredName);\n\t\tconst enteredEmailIsValid = !isEmpty(enteredEmail);\n\n\t\tsetFormInputsValidity({\n\t\t\tname: enteredNameIsValid,\n\t\t\temail: enteredEmailIsValid,\n\t\t});\n\n\t\tconst formIsValid = enteredNameIsValid && enteredEmailIsValid;\n\n\t\tif (!formIsValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tprops.onConfirm({\n\t\t\tname: enteredName,\n\t\t\tstreet: enteredEmail,\n\t\t});\n\t};\n\n\tconst nameControlClasses = `${classes.control} ${\n\t\tformInputsValidity.name ? \"\" : classes.invalid\n\t}`;\n\tconst emailControlClasses = `${classes.control} ${\n\t\tformInputsValidity.email ? \"\" : classes.invalid\n\t}`;\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={confirmHandler}>\n\t\t\t<div className={nameControlClasses}>\n\t\t\t\t<label htmlFor=\"name\">Your Name</label>\n\t\t\t\t<input type=\"text\" id=\"name\" ref={nameInputRef} />\n\t\t\t\t{!formInputsValidity.name && <p>Please enter a valid name!</p>}\n\t\t\t</div>\n\t\t\t<div className={emailControlClasses}>\n\t\t\t\t<label htmlFor=\"street\">Email</label>\n\t\t\t\t<input type=\"text\" id=\"street\" ref={emailInputRef} />\n\t\t\t\t{!formInputsValidity.email && <p>Please enter a valid email!</p>}\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button type=\"button\" onClick={hideCartHandler}>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<button className={classes.submit}>Confirm</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}