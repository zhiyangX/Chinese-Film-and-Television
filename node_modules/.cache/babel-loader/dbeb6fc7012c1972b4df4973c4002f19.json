{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./HeaderCartButton.module.css\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport { useContext, useEffect, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\"; // here we don't need the provider but the context itself\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  // by useContext here, the header cart button component will be reevaluated by react whenever the context changes\n  // changes made by CartProvider\n  const cartCtx = useContext(CartContext);\n  const [btnIsHightlighted, setBtnIsHighlighted] = useState(false);\n  const numberOfCartItems = cartCtx.items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n  const btnClasses = `${classes.button} ${btnIsHightlighted ? classes.bump : \"\"}`;\n  useEffect(() => {\n    if (cartCtx.items.length === 0) {\n      return;\n    }\n\n    setBtnIsHighlighted(true);\n    const timer = setTimeout(() => {\n      setBtnIsHighlighted(false);\n    }, 300);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [cartCtx.items]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Torrent Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.badge,\n      children: numberOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HeaderCartButton, \"GioQLa84DQN3ew+DZB3lXGZL7WY=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Layout/HeaderCartButton.js"],"names":["classes","CartIcon","useContext","useEffect","useState","CartContext","HeaderCartButton","props","cartCtx","btnIsHightlighted","setBtnIsHighlighted","numberOfCartItems","items","reduce","curNumber","item","amount","btnClasses","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,+BAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CACA;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AACnC;AACA;AACA,QAAMC,OAAO,GAAGN,UAAU,CAACG,WAAD,CAA1B;AACA,QAAM,CAACI,iBAAD,EAAoBC,mBAApB,IAA2CN,QAAQ,CAAC,KAAD,CAAzD;AAEA,QAAMO,iBAAiB,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,CAAqB,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AACnE,WAAOD,SAAS,GAAGC,IAAI,CAACC,MAAxB;AACA,GAFyB,EAEvB,CAFuB,CAA1B;AAIA,QAAMC,UAAU,GAAI,GAAEjB,OAAO,CAACkB,MAAO,IACpCT,iBAAiB,GAAGT,OAAO,CAACmB,IAAX,GAAkB,EACnC,EAFD;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIK,OAAO,CAACI,KAAR,CAAcQ,MAAd,KAAyB,CAA7B,EAAgC;AAC/B;AACA;;AACDV,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAEA,UAAMW,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC9BZ,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA,KAFuB,EAErB,GAFqB,CAAxB;AAGA,WAAO,MAAM;AACZa,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACA,KAFD;AAGA,GAZQ,EAYN,CAACb,OAAO,CAACI,KAAT,CAZM,CAAT;AAcA,sBACC;AAAQ,IAAA,SAAS,EAAEK,UAAnB;AAA+B,IAAA,OAAO,EAAEV,KAAK,CAACiB,OAA9C;AAAA,4BACC;AAAM,MAAA,SAAS,EAAExB,OAAO,CAACyB,IAAzB;AAAA,6BACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAM,MAAA,SAAS,EAAEzB,OAAO,CAAC0B,KAAzB;AAAA,gBAAiCf;AAAjC;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CArCD;;GAAML,gB;;KAAAA,gB;AAuCN,eAAeA,gBAAf","sourcesContent":["import classes from \"./HeaderCartButton.module.css\";\nimport CartIcon from \"../Cart/CartIcon\";\n\nimport { useContext, useEffect, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\n// here we don't need the provider but the context itself\n\nconst HeaderCartButton = (props) => {\n\t// by useContext here, the header cart button component will be reevaluated by react whenever the context changes\n\t// changes made by CartProvider\n\tconst cartCtx = useContext(CartContext);\n\tconst [btnIsHightlighted, setBtnIsHighlighted] = useState(false);\n\n\tconst numberOfCartItems = cartCtx.items.reduce((curNumber, item) => {\n\t\treturn curNumber + item.amount;\n\t}, 0);\n\n\tconst btnClasses = `${classes.button} ${\n\t\tbtnIsHightlighted ? classes.bump : \"\"\n\t}`;\n\n\tuseEffect(() => {\n\t\tif (cartCtx.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tsetBtnIsHighlighted(true);\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetBtnIsHighlighted(false);\n\t\t}, 300);\n\t\treturn () => {\n\t\t\tclearTimeout(timer);\n\t\t};\n\t}, [cartCtx.items]);\n\n\treturn (\n\t\t<button className={btnClasses} onClick={props.onClick}>\n\t\t\t<span className={classes.icon}>\n\t\t\t\t<CartIcon />\n\t\t\t</span>\n\t\t\t<span>Torrent Cart</span>\n\t\t\t<span className={classes.badge}>{numberOfCartItems}</span>\n\t\t</button>\n\t);\n};\n\nexport default HeaderCartButton;\n"]},"metadata":{},"sourceType":"module"}