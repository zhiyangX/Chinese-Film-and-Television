{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const hideCartHandler = () => {\n    dispatch(uiActions.setCartIsShown(false));\n  };\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: hideCartHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Checkout, \"7ooElm8Sz2CO37oMzzX1+QXseIc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Cart/Checkout.js"],"names":["useRef","useState","useDispatch","uiActions","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","dispatch","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","hideCartHandler","setCartIsShown","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n\tconst dispatch = useDispatch();\n\tconst [formInputsValidity, setFormInputsValidity] = useState({\n\t\tname: true,\n\t\tstreet: true,\n\t\tcity: true,\n\t\tpostalCode: true,\n\t});\n\n\tconst nameInputRef = useRef();\n\tconst streetInputRef = useRef();\n\tconst postalCodeInputRef = useRef();\n\tconst cityInputRef = useRef();\n\n\tconst hideCartHandler = () => {\n\t\tdispatch(uiActions.setCartIsShown(false));\n\t};\n\tconst confirmHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredName = nameInputRef.current.value;\n\t\tconst enteredStreet = streetInputRef.current.value;\n\t\tconst enteredPostalCode = postalCodeInputRef.current.value;\n\t\tconst enteredCity = cityInputRef.current.value;\n\n\t\tconst enteredNameIsValid = !isEmpty(enteredName);\n\t\tconst enteredStreetIsValid = !isEmpty(enteredStreet);\n\t\tconst enteredCityIsValid = !isEmpty(enteredCity);\n\t\tconst enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n\t\tsetFormInputsValidity({\n\t\t\tname: enteredNameIsValid,\n\t\t\tstreet: enteredStreetIsValid,\n\t\t\tcity: enteredCityIsValid,\n\t\t\tpostalCode: enteredPostalCodeIsValid,\n\t\t});\n\n\t\tconst formIsValid =\n\t\t\tenteredNameIsValid &&\n\t\t\tenteredStreetIsValid &&\n\t\t\tenteredCityIsValid &&\n\t\t\tenteredPostalCodeIsValid;\n\n\t\tif (!formIsValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tprops.onConfirm({\n\t\t\tname: enteredName,\n\t\t\tstreet: enteredStreet,\n\t\t\tcity: enteredCity,\n\t\t\tpostalCode: enteredPostalCode,\n\t\t});\n\t};\n\n\tconst nameControlClasses = `${classes.control} ${\n\t\tformInputsValidity.name ? \"\" : classes.invalid\n\t}`;\n\tconst streetControlClasses = `${classes.control} ${\n\t\tformInputsValidity.street ? \"\" : classes.invalid\n\t}`;\n\tconst postalCodeControlClasses = `${classes.control} ${\n\t\tformInputsValidity.postalCode ? \"\" : classes.invalid\n\t}`;\n\tconst cityControlClasses = `${classes.control} ${\n\t\tformInputsValidity.city ? \"\" : classes.invalid\n\t}`;\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={confirmHandler}>\n\t\t\t<div className={nameControlClasses}>\n\t\t\t\t<label htmlFor=\"name\">Your Name</label>\n\t\t\t\t<input type=\"text\" id=\"name\" ref={nameInputRef} />\n\t\t\t\t{!formInputsValidity.name && <p>Please enter a valid name!</p>}\n\t\t\t</div>\n\t\t\t<div className={streetControlClasses}>\n\t\t\t\t<label htmlFor=\"street\">Street</label>\n\t\t\t\t<input type=\"text\" id=\"street\" ref={streetInputRef} />\n\t\t\t\t{!formInputsValidity.street && <p>Please enter a valid street!</p>}\n\t\t\t</div>\n\t\t\t<div className={postalCodeControlClasses}>\n\t\t\t\t<label htmlFor=\"postal\">Postal Code</label>\n\t\t\t\t<input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\n\t\t\t\t{!formInputsValidity.postalCode && (\n\t\t\t\t\t<p>Please enter a valid postal code (5 characters long)!</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className={cityControlClasses}>\n\t\t\t\t<label htmlFor=\"city\">City</label>\n\t\t\t\t<input type=\"text\" id=\"city\" ref={cityInputRef} />\n\t\t\t\t{!formInputsValidity.city && <p>Please enter a valid city!</p>}\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button type=\"button\" onClick={hideCartHandler}>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<button className={classes.submit}>Confirm</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}