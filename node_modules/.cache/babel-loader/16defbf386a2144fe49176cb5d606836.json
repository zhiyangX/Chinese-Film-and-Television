{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Meals/MealItem/MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./MealItemForm.module.css\";\nimport { useRef, useState } from \"react\";\nimport Input from \"../../UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault(); // amountInputRef.current will point at the input element which is stored in that ref,\n    // then every input element by default has a value property which holds the currently entered value which is always a string\n\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount\",\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1-5)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["/Users/zhiyang/Documents/Portfolio/React-The Complete Guide/food-order/src/component/Meals/MealItem/MealItemForm.js"],"names":["classes","useRef","useState","Input","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,2BAApB;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMM,cAAc,GAAGP,MAAM,EAA7B;;AACA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN,GADgC,CAEhC;AACA;;AACA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AACA,QACCA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAF,mBAAmB,GAAG,CADtB,IAEAA,mBAAmB,GAAG,CAHvB,EAIE;AACDR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACA;AACD,GAdD;;AAeA,sBACC;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACkB,IAAzB;AAA+B,IAAA,QAAQ,EAAET,aAAzC;AAAA,4BACC,QAAC,KAAD;AACC,MAAA,GAAG,EAAED,cADN;AAEC,MAAA,KAAK,EAAC,QAFP;AAGC,MAAA,KAAK,EAAE;AACNW,QAAAA,EAAE,EAAE,QADE;AAENC,QAAAA,IAAI,EAAE,QAFA;AAGNC,QAAAA,GAAG,EAAE,GAHC;AAINC,QAAAA,GAAG,EAAE,GAJC;AAKNC,QAAAA,IAAI,EAAE,GALA;AAMNC,QAAAA,YAAY,EAAE;AANR;AAHR;AAAA;AAAA;AAAA;AAAA,YADD,eAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD,EAcE,CAAClB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CApCD;;GAAMF,Y;;KAAAA,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import classes from \"./MealItemForm.module.css\";\n\nimport { useRef, useState } from \"react\";\n\nimport Input from \"../../UI/Input\";\n\nconst MealItemForm = (props) => {\n\tconst [amountIsValid, setAmountIsValid] = useState(true);\n\tconst amountInputRef = useRef();\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\t// amountInputRef.current will point at the input element which is stored in that ref,\n\t\t// then every input element by default has a value property which holds the currently entered value which is always a string\n\t\tconst enteredAmount = amountInputRef.current.value;\n\t\tconst enteredAmountNumber = +enteredAmount;\n\t\tif (\n\t\t\tenteredAmount.trim().length === 0 ||\n\t\t\tenteredAmountNumber < 1 ||\n\t\t\tenteredAmountNumber > 5\n\t\t) {\n\t\t\tsetAmountIsValid(false);\n\t\t\treturn;\n\t\t}\n\t};\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitHandler}>\n\t\t\t<Input\n\t\t\t\tref={amountInputRef}\n\t\t\t\tlabel=\"Amount\"\n\t\t\t\tinput={{\n\t\t\t\t\tid: \"amount\",\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\tmin: \"1\",\n\t\t\t\t\tmax: \"5\",\n\t\t\t\t\tstep: \"1\",\n\t\t\t\t\tdefaultValue: \"1\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<button>+ Add</button>\n\t\t\t{!amountIsValid && <p>Please enter a valid amount (1-5)</p>}\n\t\t</form>\n\t);\n};\n\nexport default MealItemForm;\n"]},"metadata":{},"sourceType":"module"}